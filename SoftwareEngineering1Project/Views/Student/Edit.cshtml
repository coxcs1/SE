@model SoftwareEngineering1Project.Models.Student

@{
    ViewBag.Title = "Edit Student - " + Model.FirstName + " " + Model.LastName;
}

<h2>@ViewBag.Title
    <a href="/student/index" class="btn btn-primary btn-sm" style="float: right;">
        <i class="fa fa-arrow-left"></i> Back to Student List
    </a>
</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnterDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="datetime" name="EnterDate" id="EnterDate" class="form-control datepicker" value="@Model.EnterDate.ToShortDateString()" />
                @Html.ValidationMessageFor(model => model.EnterDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Concentration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Concentration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Concentration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Sections</label>
            <div class="col-md-10">
                <select class="form-control" multiple="multiple" name="sections">
                    @foreach (var sectionCourse in ViewBag.AllSections)
                    {
                        if (Model.Sections.Contains(sectionCourse))
                        {
                            <option value="@sectionCourse.ID" selected="selected">@sectionCourse.getCourseNameYearAndTeacher()</option>
                        }
                        else
                        {
                            <option value="@sectionCourse.ID">@sectionCourse.getCourseNameYearAndTeacher()</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea name="Notes" id="Notes" class="form-control ckeditor" value="">
                    @Model.Notes
                </textarea>
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/Scripts/Tests/Students.js")
}